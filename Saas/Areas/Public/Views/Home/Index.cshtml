@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<Saas.Models.TenantUser>
@{
    ViewData["Title"] = "Home Page";
    var ForTenant = HttpContextAccessor.HttpContext.Session.GetObject<string>("TenantName");
    var ForUser = User.Identity?.Name;
    var ForArea = "Admin";
    var ForController = "TenantUser";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @if (User.Identity?.Name == null){
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
        <br />
    } else {
        if (Model.Count()==0)
        {
            <p>You are not registered with any SaaS businesses.</p>
        } else {
            if (ForTenant==null){
                <p>Select which business you want to log into.</p>
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Tenant</th>
                            <th>User</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Model)
                        {
                            <tr>
                                @*<td>@Html.ActionLink(obj.Id, "Upsert", ForController, new { area = ForArea, Id = obj.Id }, null)</td>
                                *@<td><a href="/@ForArea/@ForController/Upsert/@obj.Id">@obj.Id</a></td>
                                @* We will bypass the:
                                 *  HttpContextAccessor.HttpContext.Session.SetObject<string>("TenantName",@obj.Tenant.Name)
                                 * until after I get this list working
                                 *@<td><a href="/Admin/Tenant/Upsert/@obj.TenantId">@obj.Tenant.Name</a></td>
                                <td>@obj.User.UserName</td>
                            </tr>
                        }
                    </tbody>
                </table>
            } else {
                <p><i>User='@ForUser' Tenant='@ForTenant'</i></p>
                <p>You can now review product for the above mentioned tenant business.</p>
            }
        }
    }
    <h4>Testing this SaaS with Postman app</h4>
    <p>A default user is created '<b>Admin@Saas.com</b>'. Password: '<b>Admin123*</b>'</p>
    <p>I then register my own user 'User@Saas.com'. Password: 'User123*' for testing the tenant/user registration process.</p>
    <p>The testing is the same here as it is for the following multitenant sample:<br />
        <a href="https://codewithmukesh.com/blog/multitenancy-in-aspnet-core/#Testing" target="_blank">https://codewithmukesh.com/blog/multitenancy-in-aspnet-core/#Testing</a>
    </p>
    <p>List: <a href="https://localhost:7179/TenantArea/Product/index?tenant=Alpha">https://localhost:7179/TenantArea/Product/index?tenant=Alpha</a></p>
    <p>Create: <a href="https://localhost:7179/TenantArea/Product/upsert?tenant=Alpha">https://localhost:7179/TenantArea/Product/upsert?tenant=Alpha</a></p>
    <p><b>Note</b>: A product is created for Alpha tenant each time the website is started.</p>
</div>
